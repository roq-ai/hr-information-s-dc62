generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description     String?           @db.VarChar(255)
  name            String            @db.VarChar(255)
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  user_id         String            @db.Uuid
  tenant_id       String            @db.VarChar(255)
  user            user              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employee        employee[]
  job_application job_application[]
}

model employee {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name String     @db.VarChar(255)
  last_name  String     @db.VarChar(255)
  position   String     @db.VarChar(255)
  salary     Int
  hire_date  DateTime   @db.Date
  company_id String     @db.Uuid
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  company    company    @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  payroll    payroll[]
  vacation   vacation[]
}

model job_application {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name       String   @db.VarChar(255)
  last_name        String   @db.VarChar(255)
  email            String   @db.VarChar(255)
  position_applied String   @db.VarChar(255)
  company_id       String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  company          company  @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model payroll {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  pay_date    DateTime @db.Date
  amount      Int
  employee_id String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  employee    employee @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company[]
}

model vacation {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_date  DateTime @db.Date
  end_date    DateTime @db.Date
  employee_id String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  employee    employee @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
